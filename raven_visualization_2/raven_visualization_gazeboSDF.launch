<launch>
	<!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>	

<env name = "GAZEBO_MODEL_PATH" value="$(find raven_visualization)/Raven_files" />


  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find raven_visualization)/model.sdf"/> -->
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <!--param name="robot_description" command="$(find xacro)/xacro inorder '$(find rrbot_description)/urdf/rrbot.xacro'"  -->

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="sdf_spawner" pkg="gazebo_ros" type="spawn_model"
    args="-sdf -model RavenII -z 1 -file '$(find raven_visualization)/model.sdf'"/>

  <!-- ros_control rrbot launch file -->
  <!--include file="$(find rrbot_control)/launch/rrbot_control.launch" /-->

	<arg name="model" default="$(find raven_visualization)/model.sdf"/>
	<param name="robot_description" textfile="$(arg model)" />
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

</launch>
